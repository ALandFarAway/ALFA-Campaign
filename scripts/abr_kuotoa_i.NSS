////////////////////////////////////////////////////////////////////////////////
//
//  System Name : ABR creature scripts
//     Filename : abr_kuotoa_i.nss
//      Revision: 
//          Date: 2012-0719
//       Author : Ronan
//
//    Var Prefix:
//  Dependencies:
//
//  Description
//
//  Revision History
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Includes ////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#include "acr_creature_i"

////////////////////////////////////////////////////////////////////////////////
// Constants ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Structures //////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Global Variables ////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function Prototypes /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function Definitions ////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void KuoToaOnSpawnIn() {
	ApplyEffectToObject(DURATION_TYPE_TEMPORARY, SupernaturalEffect(EffectSeeInvisible()), OBJECT_SELF);
}

void KuoToaExaltedWhipOnHeartbeat() {
	if(GetCurrentHitPoints() >= GetMaxHitPoints()) return;
	
	int i = 1;
	while(TRUE) {
		object oCreature = GetNearestCreature(CREATURE_TYPE_IS_ALIVE, CREATURE_ALIVE_TRUE, OBJECT_SELF, i);
		if(!GetIsObjectValid(oCreature) || GetDistanceBetween(OBJECT_SELF, oCreature) > 4.572) return;
		if(FindSubString(GetResRef(oCreature), "kuotoa") != -1) {
			// Heal the whip by 1.
			ApplyEffectToObject(DURATION_TYPE_INSTANT, EffectHeal(1), OBJECT_SELF);
			ApplyEffectToObject(DURATION_TYPE_INSTANT, EffectBeam(VFX_BEAM_CURES, oCreature, BODY_NODE_CHEST), OBJECT_SELF);
		}
		i++;
	}
	

}

void KuoToaOnPhysicallyAttacked()
{
	object oAttacker = GetLastAttacker();
	object oWeapon = GetLastWeaponUsed(oAttacker);
	object oShield = GetItemInSlot(INVENTORY_SLOT_RIGHTHAND);
	int nType = GetBaseItemType(oShield);
	
	if(!GetWeaponRanged(oWeapon) && (nType == BASE_ITEM_SMALLSHIELD || nType == BASE_ITEM_LARGESHIELD || nType == BASE_ITEM_TOWERSHIELD)) {
	
		if(GetLocalInt(oShield, "ABR_KUOTOA_ADHESIVE")) return;
	
		// We can't distinguish between hits and non-hits, but we also can't cause grapple on unarmed strikes.
		// Lower the reflex save DC by 2.
		if(!ReflexSave(oAttacker, 12, SAVING_THROW_TYPE_NONE, OBJECT_SELF)) {
			AssignCommand(oAttacker, SpeakString("*<i>your weapon sticks to his enemies shield, and is pulled from your grasp!</i>*"));
			SetLocalInt(oShield, "ABR_KUOTOA_ADHESIVE", 1);
			AssignCommand(oWeapon, JumpToLocation(GetLocation(OBJECT_SELF)));
		} else {
			AssignCommand(oAttacker, SpeakString("*<i>your weapon momentarily sticks to your enemies shield, and is nearly pulled from your grasp!</i>*"));
		}
	}
}